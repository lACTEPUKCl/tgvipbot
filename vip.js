import TelegramBot from "node-telegram-bot-api";
import { MongoClient } from "mongodb";
import dotenv from "dotenv";
import getSteamId64 from "./utils/getSteamID64.js";
import vipCreater from "./utils/vipCreater.js";
import fs from "fs";
dotenv.config();

const bot = new TelegramBot(process.env.BOT_TOKEN, { polling: true });
const mongo = new MongoClient(process.env.MONGO_URL);

let steamCollection;
const waitForSteam = new Map();

const vipText = `
<b>–£–≤–∞–∂–∞–µ–º—ã–µ –∏–≥—Ä–æ–∫–∏ –†—É—Å—Å–∫–æ–≥–æ –ù–∞—Ä–æ–¥–Ω–æ–≥–æ –°–µ—Ä–≤–µ—Ä–∞!</b>

–í—ã –º–æ–∂–µ—Ç–µ <b>–¥–æ–±—Ä–æ–≤–æ–ª—å–Ω–æ —Å–¥–µ–ª–∞—Ç—å –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ</b> –Ω–∞ —Ä–∞–∑–≤–∏—Ç–∏–µ –∏ –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ –Ω–∞—à–∏—Ö –∏–≥—Ä–æ–≤—ã—Ö —Å–µ—Ä–≤–µ—Ä–æ–≤.

<b>–í –∑–Ω–∞–∫ –ø—Ä–∏–∑–Ω–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏</b> –∑–∞ –≤–∞—à—É –ø–æ–¥–¥–µ—Ä–∂–∫—É –º—ã –º–æ–∂–µ–º –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏—Ç—å –≤–∞–º <b>VIP —Å—Ç–∞—Ç—É—Å</b>.

<b>VIP —Å—Ç–∞—Ç—É—Å:</b>
‚Ä¢ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–π –¥–æ—Å—Ç—É–ø –Ω–∞ —Å–µ—Ä–≤–µ—Ä ‚Äî –±–µ–∑ –æ–∂–∏–¥–∞–Ω–∏—è;
‚Ä¢ –ø—Ä–∞–≤–æ –≥–æ–ª–æ—Å–∞ –∑–∞ –≤—ã–±–æ—Ä –∫–∞—Ä—Ç—ã.

<b>–ü–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏—è:</b>
‚Ä¢ <b>300 —Ä—É–±–ª–µ–π</b> ‚Äî VIP –Ω–∞ 1 –º–µ—Å—è—Ü;
‚Ä¢ <b>2000 —Ä—É–±–ª–µ–π</b> ‚Äî –∫–ª–∞–Ω–æ–≤—ã–π VIP –Ω–∞ 1 –º–µ—Å—è—Ü (–¥–æ 30 —á–µ–ª–æ–≤–µ–∫).

<b>–í—Å—ë —è–≤–ª—è–µ—Ç—Å—è –ø–æ–∂–µ—Ä—Ç–≤–æ–≤–∞–Ω–∏–µ–º!</b> VIP ‚Äî –ª–∏—à—å –±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É.

<b>–ë–æ–Ω—É—Å–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞:</b>
‚Ä¢ 1 –±–∞–ª–ª ‚Äî 1 –º–∏–Ω—É—Ç–∞ –Ω–∞ –æ–±—ã—á–Ω–æ–π –∫–∞—Ä—Ç–µ, 2 –±–∞–ª–ª–∞ ‚Äî 1 –º–∏–Ω—É—Ç–∞ –Ω–∞ seed-–∫–∞—Ä—Ç–µ.
‚Ä¢ 15000 –±–∞–ª–ª–æ–≤ = VIP –Ω–∞ –º–µ—Å—è—Ü (–∫–æ–º–∞–Ω–¥–∞ !bonus –≤ –∏–≥—Ä–µ).
`;

(async () => {
  await mongo.connect();
  steamCollection = mongo.db("SquadJS").collection("mainstats");
  console.log("MongoDB connected");
})();

bot.onText(/\/start/, async (msg) => {
  const chatId = msg.chat.id;
  await bot.sendMessage(chatId, vipText, { parse_mode: "HTML" });
  await bot.sendMessage(chatId, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", {
    reply_markup: {
      inline_keyboard: [
        [{ text: "üíé VIP —Å—Ç–∞—Ç—É—Å –∑–∞ –¥–æ–Ω–∞—Ç", callback_data: "donate" }],
        [{ text: "üéÅ VIP –∑–∞ –±–æ–Ω—É—Å–Ω—ã–µ –±–∞–ª–ª—ã", callback_data: "bonus" }],
        [{ text: "üßê –ü—Ä–æ–≤–µ—Ä–∏—Ç—å VIP", callback_data: "check_vip" }],
      ],
    },
  });
});

bot.on("callback_query", async (query) => {
  const chatId = query.message.chat.id;

  if (query.data === "donate") {
    const user = await steamCollection.findOne({
      telegramid: chatId.toString(),
    });
    if (user && user._id) {
      const link = `${process.env.DONATION_LINK}${user._id}`;
      return bot.sendMessage(
        chatId,
        "–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –¥–æ–Ω–∞—Ç–∞ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ:",
        {
          reply_markup: {
            inline_keyboard: [[{ text: "üí≥ –û—Ñ–æ—Ä–º–∏—Ç—å –¥–æ–Ω–∞—Ç", url: link }]],
          },
        }
      );
    } else {
      waitForSteam.set(chatId, "donate");
      return bot.sendMessage(
        chatId,
        "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π SteamID64 (17 —Ü–∏—Ñ—Ä) –∏–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å Steam:"
      );
    }
  }

  if (query.data === "bonus") {
    const dbUser = await steamCollection.findOne({
      telegramid: chatId.toString(),
    });

    if (!dbUser) {
      return bot.sendMessage(
        chatId,
        "–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å VIP –∑–∞ –±–æ–Ω—É—Å–Ω—ã–µ –±–∞–ª–ª—ã, –ø—Ä–∏–≤—è–∂–∏—Ç–µ —Å–≤–æ–π Steam –ø—Ä–æ—Ñ–∏–ª—å –∫ Telegram.",
        {
          reply_markup: {
            inline_keyboard: [
              [
                {
                  text: "–ü—Ä–∏–≤—è–∑–∞—Ç—å SteamID",
                  callback_data: "bind_steam_for_bonus",
                },
              ],
            ],
          },
        }
      );
    }
    const { bonuses = 0, _id: steamid, name } = dbUser;

    if (bonuses < 15000) {
      return bot.sendMessage(
        chatId,
        `–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç ${
          15000 - bonuses
        } –±–æ–Ω—É—Å–Ω—ã—Ö –±–∞–ª–ª–æ–≤ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è VIP —Å—Ç–∞—Ç—É—Å–∞, —Ç—Ä–µ–±—É–µ—Ç—Å—è 15000.`
      );
    }
    await steamCollection.updateOne(
      { _id: steamid },
      {
        $inc: { bonuses: -15000 },
      }
    );

    await vipCreater(steamid, name || steamid, 30, chatId);

    await bot.sendMessage(
      chatId,
      "üéâ VIP —Å—Ç–∞—Ç—É—Å —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω –∑–∞ –±–æ–Ω—É—Å–Ω—ã–µ –±–∞–ª–ª—ã!\n–°—Ç–∞—Ç—É—Å –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω, –ø—Ä–æ–≤–µ—Ä—å—Ç–µ –≤ –∏–≥—Ä–µ –ø–æ—Å–ª–µ —Å–º–µ–Ω—ã –∫–∞—Ä—Ç—ã."
    );
    return;
  }

  if (query.data === "bind_steam_for_bonus") {
    waitForSteam.set(chatId, "bonus");
    return bot.sendMessage(
      chatId,
      "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–≤–æ–π SteamID64 (17 —Ü–∏—Ñ—Ä) –∏–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ –ø—Ä–æ—Ñ–∏–ª—å Steam:"
    );
  }

  if (query.data === "check_vip") {
    const user = await steamCollection.findOne({
      telegramid: chatId.toString(),
    });
    if (!user || !user._id) {
      return bot.sendMessage(chatId, "–í—ã –µ—â—ë –Ω–µ –ø—Ä–∏–≤—è–∑–∞–ª–∏ SteamID!");
    }
    const steamID = user._id;

    let file;

    try {
      file = fs.readFileSync(
        process.env.ADMINS_CFG_PATH || "./Admins.cfg",
        "utf-8"
      );
    } catch (e) {
      return bot.sendMessage(chatId, "–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ–∞–π–ª—É Admins.cfg");
    }
    const regexp = new RegExp(
      `Admin=${steamID}:Reserved [//]* DiscordID [0-9]+ do (?<date>[0-9]{2}\\.[0-9]{2}\\.[0-9]{4})`
    );
    const found = file.match(regexp);

    if (!found || !found.groups || !found.groups.date) {
      return bot.sendMessage(chatId, "VIP –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –∏—Å—Ç—ë–∫.");
    }

    const date = found.groups.date;
    const today = new Date();
    const [dd, mm, yyyy] = date.split(".");
    const vipUntil = new Date(`${yyyy}-${mm}-${dd}T23:59:59Z`);
    const daysLeft = Math.max(
      0,
      Math.ceil((vipUntil - today) / (1000 * 60 * 60 * 24))
    );

    let text = `‚úÖ –í–∞—à VIP –∞–∫—Ç–∏–≤–µ–Ω –¥–æ ${date}`;
    if (daysLeft > 0) text += `\n‚è≥ –û—Å—Ç–∞–ª–æ—Å—å –¥–Ω–µ–π: ${daysLeft}`;
    else text = "–°—Ä–æ–∫ –¥–µ–π—Å—Ç–≤–∏—è VIP –∏—Å—Ç—ë–∫.";

    return bot.sendMessage(chatId, text);
  }
});

bot.on("message", async (msg) => {
  const chatId = msg.chat.id;
  if (!msg.text || msg.text.startsWith("/")) return;

  const mode = waitForSteam.get(chatId);
  if (!mode) return;

  const input = msg.text.trim();
  const steamid = await getSteamId64(process.env.STEAM_API_KEY, input);

  if (!steamid) {
    return bot.sendMessage(
      chatId,
      "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å SteamID. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞."
    );
  }

  const user = await steamCollection.findOne({ _id: steamid });
  if (user && user.telegramid) {
    return bot.sendMessage(
      chatId,
      "–≠—Ç–æ—Ç SteamID —É–∂–µ –ø—Ä–∏–≤—è–∑–∞–Ω –∫ –¥—Ä—É–≥–æ–º—É Telegram. –ï—Å–ª–∏ —ç—Ç–æ –æ—à–∏–±–∫–∞ ‚Äî –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏."
    );
  }

  await steamCollection.updateOne(
    { _id: steamid },
    { $set: { telegramid: chatId.toString() } },
    { upsert: true }
  );
  waitForSteam.delete(chatId);

  if (mode === "donate") {
    const link = `${process.env.DONATION_LINK}${steamid}`;
    return bot.sendMessage(
      chatId,
      `‚úÖ –ü—Ä–∏–≤—è–∑–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ!\n\n–û—Ñ–æ—Ä–º–∏—Ç—å –¥–æ–Ω–∞—Ç: [–ù–ê–ñ–ú–ò –°–Æ–î–ê](${link})`,
      { parse_mode: "Markdown", disable_web_page_preview: true }
    );
  }
  if (mode === "bonus") {
    const dbUser = await steamCollection.findOne({ _id: steamid });
    const { bonuses = 0, name } = dbUser;
    if (bonuses < 15000) {
      return bot.sendMessage(
        chatId,
        `–ü—Ä–∏–≤—è–∑–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç ${
          15000 - bonuses
        } –±–æ–Ω—É—Å–Ω—ã—Ö –±–∞–ª–ª–æ–≤ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è VIP —Å—Ç–∞—Ç—É—Å–∞.`
      );
    }
    await steamCollection.updateOne(
      { _id: steamid },
      {
        $inc: { bonuses: -15000 },
        $set: { "vip.active": true, "vip.date": new Date() },
      }
    );
    await vipCreater(steamid, name || steamid, 30, chatId);

    return bot.sendMessage(
      chatId,
      "‚úÖ –ü—Ä–∏–≤—è–∑–∫–∞ –ø—Ä–æ—à–ª–∞ —É—Å–ø–µ—à–Ω–æ! VIP —Å—Ç–∞—Ç—É—Å —Å—Ä–∞–∑—É –ø–æ–ª—É—á–µ–Ω –∑–∞ –±–æ–Ω—É—Å–Ω—ã–µ –±–∞–ª–ª—ã!"
    );
  }
});

console.log("VIP-–±–æ—Ç –∑–∞–ø—É—â–µ–Ω! node-telegram-bot-api");
